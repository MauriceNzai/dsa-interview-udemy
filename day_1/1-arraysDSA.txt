Day 1 Goals
Welcome to Day 1 of the DSA Coding Challenge:

Today's Goals (Arrays) :

-Learn Big O Analysis to find Time and Space complexity

-Array Data Structure Crash Course

Question 1: Sorted Squared Array - You are given an array of Integers in which each subsequent value is not less than the previous value. Write a function that takes this array as an input and returns a new array with the squares of each number sorted in ascending order.

Question 2: Monotonic Array - An array is monotonic if it is either monotone increasing or monotone decreasing. An array is monotone increasing if all its elements from left to right are non-decreasing. An array is monotone decreasing if all  its elements from left to right are non-increasing. Given an integer array return true if the given array is monotonic, or false otherwise.

All the best !


Sorted Squared Array
Clarifying questions
Are all numbers positive? No, negative, and zero can also be given
Are the numbers unique? No, duplicates are possible
Can an empty array be given? Yes, return empty array

Test Cases
[1,3,5] => [1,25,36]
[0,5,6] => [0,25,36]
[-4,-2,0,1,3] => [0,1,4,9,16]

Approach
method 1: bruteforce
square each element and store result in a new array
then sort the result array
time complexity => O(n logn)
space complexity => O(n)

method 2 : make use of the fact given array is sorted in ascending order
properties of numbers = the square of increases towards the two ends of number line
in sorted array largest value of squared element is either the left most or right most element in array
use two pointers and compare which element has the largest value when squared
store the value in the last index of the result array and increament or decreament the appropriate pointer
